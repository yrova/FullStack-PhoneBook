{"version":3,"sources":["components/FilterNumbers.js","services/phonenumbers.js","components/AddEntry.js","components/DisplayNumbers.js","components/messages/Notification.js","App.js","index.js"],"names":["FilterNumbers","setNewFilter","onChange","event","target","value","toLowerCase","baseUrl","axios","get","newObject","post","then","response","data","id","put","delete","console","log","AddEntry","persons","setPersons","setMessage","useState","newName","setNewName","newPhoneNumber","setNewPhoneNumber","hasDuplicateNumber","find","person","name","number","toString","onSubmit","preventDefault","every","trim","formattedNumber","numService","message","type","setTimeout","concat","formatName","window","confirm","changedNumber","returnedNumber","map","catch","error","filter","handleDuplicateUpdate","pattern","required","maxLength","minLength","title","placeholder","Name","onClick","numServices","DisplayNumbers","filterBy","applyFilter","startsWith","key","notificationStyle","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","errorStyle","Notification","styleType","className","style","App","useEffect","numberService","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8877efa3.chunk.js","sourcesContent":["import React from \"react\";\n\nconst FilterNumbers = ({ setNewFilter }) => {\n  const handleFilterChange = event => {\n    setNewFilter(event.target.value.toLowerCase());\n  };\n  return (\n    <div>\n      <form>\n        <div>\n          filter shown with\n          <input onChange={handleFilterChange} />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default FilterNumbers;\n","import axios from \"axios\";\nconst baseUrl = \"/api/people\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request;\n};\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then(response => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then(response => response.data);\n};\n\nconst deleteNum = id => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then(response => {\n    console.log(`Delete Success for number with id: ${id}`);\n  });\n};\n\nexport default { getAll, create, update, deleteNum };\n","import React, { useState } from \"react\";\nimport numService from \"../services/phonenumbers\";\n\nconst AddEntry = ({ persons, setPersons, setMessage }) => {\n  const [newName, setNewName] = useState(\"\");\n  const [newPhoneNumber, setNewPhoneNumber] = useState(\"\");\n\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handlePhoneNumberChange = event => {\n    setNewPhoneNumber(event.target.value);\n  };\n\n  const handleDuplicateUpdate = () => {\n    const formatName = newName.trim();\n    const message = `${formatName} is already added to the phonebook, replace the old number with a new one?`;\n    if (hasDuplicateNumber()) {\n      setMessage({\n        message: `This number is already set in the database`,\n        type: false\n      })\n      setTimeout(() => {\n        setMessage(null);\n      }, 5000);\n\n      return;\n    }\n    if (window.confirm(message)) {\n      const formattedNumber = newPhoneNumber.trim();\n      const number = persons.find(person => person.name === newName);\n      const changedNumber = { ...number, number: formattedNumber };\n\n      numService\n        .update(changedNumber.id, changedNumber)\n        .then(returnedNumber => {\n          setMessage({\n            message: `Changed Number for ${formatName}`,\n            type: true\n          });\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n          setPersons(\n            persons.map(person =>\n              person.id !== changedNumber.id ? person : returnedNumber\n            )\n          );\n        })\n        .catch(error => {\n          setMessage({\n            message: `Information of ${formatName} has already been removed from the server `,\n            type: false\n          });\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n          setPersons(persons.filter(person => person.id !== number.id));\n        });\n    }\n  };\n\n  //Returns true if array has a duplicate name, false otherwise\n  const hasDuplicate = () =>\n    !persons.every(\n      person =>\n        person.name.toLowerCase().trim() !== newName.toLowerCase().trim()\n    );\n\n  const hasDuplicateNumber = () => {\n    const personNumber = persons.find(person => person.name === newName);\n    if (personNumber.number.toString() === newPhoneNumber) {\n      return true;\n    }\n\n    return false;\n\n  }\n\n\n  const addUserInfo = event => {\n    event.preventDefault();\n    if (hasDuplicate()) {\n      handleDuplicateUpdate();\n    } else {\n      const formattedNumber = newPhoneNumber.trim();\n      const nameObj = {\n        name: newName,\n        number: formattedNumber\n      };\n\n      numService.create(nameObj).then(data => {\n        setMessage({\n          message: `Added ${data.name}`,\n          type: true\n        });\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000);\n        setPersons(persons.concat(data));\n        setNewName(\"\");\n        setNewPhoneNumber(\"\");\n      });\n    }\n  };\n\n  return (\n    <div>\n      <h2>Numbers</h2>\n      <form onSubmit={addUserInfo}>\n        <div>\n          name:\n          <input\n            type=\"text\"\n            pattern=\"^[\\w'\\-,.][^0-9_!¡?÷?¿/\\\\+=@#$%ˆ&*(){}|~<>;:[\\]]{3,25}$\"\n            value={newName}\n            required={true}\n            onChange={handleNameChange}\n            maxLength={30}\n            minLength={3}\n            title=\"Name should only contain letters and spaces e.g Avory Richie\"\n          />\n        </div>\n        <div>\n          number:\n          <input\n            type=\"text\"\n            pattern=\"[0-9]{10,11}\"\n            maxLength={11}\n            minLength={10}\n            value={newPhoneNumber}\n            onChange={handlePhoneNumberChange}\n            required={true}\n            placeholder=\"XXXXXXXXXX\"\n            title=\"Phone Number should only contain numbers e.g 3217353498 or 18008272874\"\n          />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default AddEntry;\n","import React from \"react\";\nimport numServices from \"../services/phonenumbers\";\n\nconst DisplayNumbers = ({ persons, filterBy, setPersons }) => {\n  const applyFilter = !filterBy\n    ? persons\n    : persons.filter(person => person.name.toLowerCase().startsWith(filterBy));\n\n  const rows = () =>\n    applyFilter.map(person => (\n      <Name\n        key={person.id}\n        person={person}\n        setPersons={setPersons}\n        persons={persons}\n      />\n    ));\n\n  return (\n    <div>\n      <h2>Numbers</h2>\n      <table>\n        <tbody>{rows()}</tbody>\n      </table>\n    </div>\n  );\n};\n\nconst Name = ({ person, setPersons, persons }) => {\n  const { name, number, id } = person;\n  const deleteNumber = () => {\n    if (window.confirm(`Do you really want to delete ${name}'s number?`)) {\n      numServices.deleteNum(id).then(response => {\n        setPersons(persons.filter(person => person.name !== name));\n      });\n    }\n  };\n\n  return (\n    <tr>\n      <td>\n        {name} {number} <button onClick={deleteNumber}>delete</button>\n      </td>\n    </tr>\n  );\n};\n\nexport default DisplayNumbers;\n","import React from \"react\";\n\nconst Notification = ({ message }) => {\n  if (message === null || message.message === null || message.type === null) {\n    return null;\n  }\n\n  // Change css based on style type:  Type: True = Green Box, False = Red Box\n  const styleType = message.type ? notificationStyle : errorStyle;\n\n  return (\n    <div className=\"error\" style={styleType}>\n      {message.message}\n    </div>\n  );\n};\n\nconst notificationStyle = {\n  color: \"green\",\n  background: \"lightgrey\",\n  fontSize: 20,\n  borderStyle: \"solid\",\n  borderRadius: 5,\n  padding: 10,\n  marginBottom: 10\n};\n\nconst errorStyle = {\n  color: \"red\",\n  background: \"lightgrey\",\n  fontSize: 20,\n  borderStyle: \"solid\",\n  borderRadius: 5,\n  padding: 10,\n  marginBottom: 10\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from \"react\";\nimport FilterNumbers from \"./components/FilterNumbers\";\nimport AddEntry from \"./components/AddEntry\";\nimport DisplayNumbers from \"./components/DisplayNumbers\";\nimport numberService from \"./services/phonenumbers\";\nimport Notification from \"./components/messages/Notification\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [filterBy, setNewFilter] = useState(\"\");\n  const [message, setMessage] = useState({\n    message: null,\n    type: null //true = green box, false = red box\n  });\n\n  useEffect(() => {\n    numberService.getAll().then(response => {\n      setPersons(response.data);\n    });\n  }, []);\n\n  return (\n    <div>\n      <h2>PhoneBook</h2>\n      <Notification message={message} />\n      <FilterNumbers setNewFilter={setNewFilter} />\n      <AddEntry\n        persons={persons}\n        setPersons={setPersons}\n        setMessage={setMessage}\n      />\n      <DisplayNumbers\n        persons={persons}\n        filterBy={filterBy}\n        setPersons={setPersons}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}